{"version":3,"sources":["pages/Main.jsx","util/index.js"],"names":["Main","api","useApi","useState","movies","setMovies","genre","setGenre","history","useHistory","useEffect","getMovies","then","genresArray","forEach","genres","Set","filteredMovies","filter","movie","includes","label","onChange","value","target","select","map","g","key","description_full","id","medium_cover_image","title","description","img","onClick","push"],"mappings":"oMAgDeA,UAzCF,WACX,IAAMC,EAAMC,cADK,EAEWC,qBAFX,mBAEVC,EAFU,KAEFC,EAFE,OAGSF,mBAAS,OAHlB,mBAGVG,EAHU,KAGHC,EAHG,KAIXC,EAAUC,cAIhB,GAFAC,qBAAU,WAAQT,EAAIU,YAAYC,KAAKP,KAAc,CAACJ,KAEjDG,EACH,OAAO,kBAAC,IAAD,MAGT,IAAIS,EAAc,GAClBT,EAAOU,SAAQ,YAAiB,IAAdC,EAAa,EAAbA,OAChBF,EAAW,sBAAOA,GAAP,YAAuBE,GAAU,QAE9C,IAAMA,EAAM,CAAI,OAAJ,mBAAc,IAAIC,IAAIH,KAC5BI,EAAiBb,EAAOc,QAAO,SAACC,GAAD,YAAsB,QAAVb,IAAA,UAAyBa,EAAMJ,cAA/B,aAAyB,EAAcK,SAASd,OAEjG,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEe,MAAM,SACNC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BhB,EAASgB,IAC9CE,QAAM,EACNF,MAAOjB,GAENS,EAAOW,KAAI,SAACC,GAAD,OAAO,kBAAC,IAAD,CAAUC,IAAKD,EAAGJ,MAAOI,GAAIA,OAEjDV,EAAeS,KAAI,gBAAEG,EAAF,EAAEA,iBAAkBC,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,mBAAoBC,EAA5C,EAA4CA,MAA5C,OACpB,kBAAC,IAAD,CACEC,YAAaJ,EACbK,IAAKH,EACLH,IAAKE,EACLK,QAAS,kBAAM3B,EAAQ4B,KAAR,UAAgBN,KAC/BE,MAAOA,U,gCC1Cf","file":"static/js/5.1c210363.chunk.js","sourcesContent":["import { Box, CircularProgress, MenuItem, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { useApi } from '../util';\nimport { MovieCard } from '../components';\nimport { useHistory } from 'react-router-dom';\n\nconst Main = () => {\n  const api = useApi();\n  const [movies, setMovies] = useState();\n  const [genre, setGenre] = useState('All');\n  const history = useHistory();\n\n  useEffect(() => { api.getMovies().then(setMovies) }, [api]);\n\n  if (!movies) {\n    return <CircularProgress />;\n  }\n\n  let genresArray = [];\n  movies.forEach(({ genres }) => {\n    genresArray = [...genresArray, ...genres || []];\n  });\n  const genres = ['All', ...new Set(genresArray)];\n  const filteredMovies = movies.filter((movie) => (genre === 'All' ? true : movie.genres?.includes(genre)));\n\n  return (\n    <Box>\n      <TextField\n        label=\"Genres\"\n        onChange={({ target: { value } }) => setGenre(value)}\n        select\n        value={genre}\n      >\n        {genres.map((g) => <MenuItem key={g} value={g}>{g}</MenuItem>)}\n      </TextField>\n      {filteredMovies.map(({description_full, id, medium_cover_image, title }) => (\n      <MovieCard\n        description={description_full}\n        img={medium_cover_image}\n        key={id}\n        onClick={() => history.push(`${id}`)}\n        title={title}\n      />))}\n    </Box>\n  );\n}\n\nexport default Main;\n","import useApi from './useApi';\n\nexport {\n  useApi,\n};\n"],"sourceRoot":""}