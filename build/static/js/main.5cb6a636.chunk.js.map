{"version":3,"sources":["util/useApi.js","api/index.js","api/api.js","firebaseConfig.js","components/ApiProvider.jsx","components/MovieCard.jsx","App.jsx","index.js"],"names":["ApiContext","createContext","Consumer","useContext","Api","this","basePath","database","firebase","ref","once","then","d","val","id","movies","filter","dataId","slice","pop","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ApiProvider","props","firebaseConfig","api","Provider","value","MovieCard","description","img","onClick","title","Box","width","Card","CardActionArea","alt","src","CardContent","Typography","gutterBottom","variant","component","color","Main","lazy","Item","App","fallback","CircularProgress","path","exact","ReactDOM","render","document","getElementById"],"mappings":"+FAAA,6CAEaA,EAAaC,0BAECD,EAAWE,SAEvB,sBAAMC,qBAAWH,K,iLCJjBI,G,iBCEb,aAAe,oBACbC,KAAKC,SAAW,eAChBD,KAAKE,SAAWC,aAAoBC,IAAIJ,KAAKC,UAAUI,KAAK,SAASC,MAAK,SAACC,GAAD,OAAOA,EAAEC,S,wDAInF,OAAOR,KAAKE,W,wEAGCO,G,uFACQT,KAAKE,S,cAApBQ,E,yBACCA,EAAOC,QAAO,gBAAOC,EAAP,EAAGH,GAAH,OAAoBA,IAAOG,KAAQC,OAAO,GAAGC,O,+GCfvD,GACbC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,gBCMFC,EAPK,SAACC,GACnBrB,gBAAuBsB,GACvB,IAAMC,EAAM,IAAI3B,EAEhB,OAAO,kBAAC,IAAW4B,SAAZ,eAAqBC,MAAOF,GAASF,K,wCCc/BK,EApBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9C,OACE,kBAACC,EAAA,EAAD,CAAKC,MAAO,KACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBL,QAASA,GACvB,yBAAKM,IAAKL,EAAOM,IAAKR,IACtB,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CX,GAEH,kBAACQ,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACzDd,S,+HCXTgB,EAAOC,gBAAK,kBAAM,uDAClBC,EAAOD,gBAAK,kBAAM,iCAaTE,EAXH,WACV,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YAAYR,UAAWI,IACnC,kBAAC,IAAD,CAAOK,OAAK,EAACT,UAAWE,O,gBCPhCQ,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5cb6a636.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const ApiContext = createContext();\n\nexport const ApiConsumer = ApiContext.Consumer;\n\nexport default () => useContext(ApiContext);\n","import Api from './api';\n\nexport default Api;\n","import * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nexport default class Api {\n  constructor() {\n    this.basePath = '/data/movies';\n    this.database = firebase.database().ref(this.basePath).once('value').then((d) => d.val());\n  }\n\n  getMovies() {\n    return this.database;\n  }\n\n  async getMovie(id) {\n    const movies = await this.database;\n    return movies.filter(({ id: dataId }) => id === dataId).slice(-1).pop();\n  }\n\n  // makeHeaders(auth = false) {\n  //   const headers = {\n  //     'Content-Type': 'application/x-www-form-urlencoded',\n  //   };\n  //   if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n  //   return headers;\n  // }\n\n  // signup(name) {\n  //   return fetch(`${this.BASE_URL}/signup`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(),\n  //     body: `name=${name}`,\n  //   })\n  //     .then((res) => res.json())\n  //     .then(({ key }) => localStorage.setItem('key', key));\n  // }\n\n  // login() {\n  //   return fetch(`${this.BASE_URL}/login`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //   }).then((res) => res.json());\n  // }\n\n  // joinRoom(id) {\n  //   return fetch(`${this.BASE_URL}/rooms/${id}`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //   }).then((res) => res.json());\n  // }\n\n  // getRooms() {\n  //   return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n  // }\n\n  // createRoom(name) {\n  //   return fetch(`${this.BASE_URL}/rooms`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //     body: `name=${name}`,\n  //   }).then((res) => res.json());\n  // }\n\n  // getRoom(roomId) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  // }\n\n  // getChats(roomId) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n  // }\n\n  // sendMessage(roomId, message) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //     body: `message=${message}`,\n  //   }).then((res) => res.json());\n  // }\n}\n","export default {\n  apiKey: \"AIzaSyA5_6R9FalAiw4pONJhHuGqv8qe7qvc1w8\",\n  authDomain: \"movie-97e7e.firebaseapp.com\",\n  databaseURL: \"https://movie-97e7e.firebaseio.com\",\n  projectId: \"movie-97e7e\",\n  storageBucket: \"movie-97e7e.appspot.com\",\n  messagingSenderId: \"1004714639363\",\n  appId: \"1:1004714639363:web:b7f18cd55c0cd4cb458e36\",\n  measurementId: \"G-N2P8D7S78Q\"\n};\n","import React from 'react';\nimport * as firebase from 'firebase/app';\n\nimport { ApiContext } from '../util/useApi';\nimport Api from '../api';\nimport firebaseConfig from '../firebaseConfig';\n\nconst ApiProvider = (props) => {\n  firebase.initializeApp(firebaseConfig)\n  const api = new Api();\n\n  return <ApiContext.Provider value={api} {...props} />;\n};\n\nexport default ApiProvider;\n","import React from 'react';\nimport {\n  Box, Button, Card, CardActions, CardActionArea, CardContent, Typography,\n} from '@material-ui/core';\n\nconst MovieCard = ({ description, img, onClick, title }) => {\n  return (\n    <Box width={400}>\n      <Card>\n        <CardActionArea onClick={onClick}>\n          <img alt={title} src={img} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MovieCard;\n","import { CircularProgress } from '@material-ui/core';\nimport React, { lazy, Suspense } from 'react';\n\nimport { Route, Switch } from 'react-router';\n\nconst Main = lazy(() => import('./pages/Main'));\nconst Item = lazy(() => import('./pages/Item'));\n\nconst App = () => {\n  return (\n    <Suspense fallback={<CircularProgress />}>\n      <Switch>\n        <Route path=\"/:movieId\" component={Item} />\n        <Route exact component={Main} />\n      </Switch>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApiProvider } from './components';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApiProvider>\n      <App />\n    </ApiProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}