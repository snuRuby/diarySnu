{"ast":null,"code":"import _defineProperty from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map, List, fromJS } from \"immutable\"; // action types\n\nvar INITIALIZE = \"beats/INITIALIZE\";\nvar SET_INDEX = \"beats/SET_INDEX\";\nvar SET_BEAT_DETAIL = \"beats/SET_BEAT_DETAIL\";\nvar GET_BEATS_BEGIN = \"beats/GET_BEATS_BEGIN\";\nvar GET_BEAT_SUCCESS = \"beats/GET_BEAT_SUCCESS\";\nvar GET_BEATS_SUCCESS = \"beats/GET_BEATS_SUCCESS\";\nvar GET_BEAT_FAILURE = \"beats/GET_BEATS_FAILURE\";\nvar GET_BEATS_FAILURE = \"beats/GET_BEATS_FAILURE\";\nvar POST_BEATS_BEGIN = \"beats/POST_BEATS_BEGIN\";\nvar POST_BEATS_SUCCESS = \"beats/POST_BEATS_SUCCESS\";\nvar POST_BEATS_FAILURE = \"beats/POST_BEATS_FAILURE\"; // action creators\n\nexport var initialize = createAction(INITIALIZE);\nexport var setIndex = createAction(SET_INDEX);\nexport var setBeatDetail = createAction(SET_BEAT_DETAIL);\nexport var getBeatsBegin = createAction(GET_BEATS_BEGIN);\nexport var getBeatSuccess = createAction(GET_BEAT_SUCCESS);\nexport var getBeatsSuccess = createAction(GET_BEATS_SUCCESS);\nexport var getBeatFailure = createAction(GET_BEAT_FAILURE);\nexport var getBeatsFailure = createAction(GET_BEATS_FAILURE);\nexport var postBeatsBegin = createAction(POST_BEATS_BEGIN);\nexport var postBeatsSuccess = createAction(POST_BEATS_SUCCESS);\nexport var postBeatsFailure = createAction(POST_BEATS_FAILURE); // initial state\n\nvar initialState = Map({\n  loading: false,\n  beats: List(),\n  error: null,\n  index: null,\n  beat: Map({}),\n  post: Map({\n    loading: false,\n    error: null,\n    success: null\n  })\n});\n/**\n * Map({\n        id: null,\n        title: null,\n        created: null,\n        updated: null,\n        author: null,\n        description: null,\n        num_like: null,\n        num_comment: null,\n        hasWaterMark: null,\n        bpm: null,\n        owner: null,\n        imgUrl: null,\n        downloadUrl: null,\n        tags: List(),\n    }),\n */\n// reducer\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, INITIALIZE, function (state, action) {\n  return initialState;\n}), _defineProperty(_handleActions, SET_INDEX, function (state, action) {\n  var id = action.payload;\n  return state.set(\"index\", id);\n}), _defineProperty(_handleActions, SET_BEAT_DETAIL, function (state, action) {\n  return state.setIn([\"beat\", action.payload.key], action.payload.value);\n}), _defineProperty(_handleActions, SET_BEAT_DETAIL, function (state, action) {\n  return state.setIn([\"beat\", action.payload.key], action.payload.value);\n}), _defineProperty(_handleActions, GET_BEATS_BEGIN, function (state, action) {\n  return state.set(\"loading\", true).set(\"error\", null);\n}), _defineProperty(_handleActions, GET_BEAT_SUCCESS, function (state, action) {\n  var response = action.payload.data;\n  return state.set(\"beat\", fromJS(response)).set(\"loading\", false);\n}), _defineProperty(_handleActions, GET_BEAT_SUCCESS, function (state, action) {\n  var response = action.payload.data;\n  return state.set(\"beat\", fromJS(response)).set(\"loading\", false);\n}), _defineProperty(_handleActions, GET_BEATS_SUCCESS, function (state, action) {\n  var response = action.payload.data;\n  return state.set(\"beats\", fromJS(response.results)).set(\"loading\", false);\n}), _defineProperty(_handleActions, GET_BEAT_FAILURE, function (state, action) {\n  return state.set(\"loading\", false).set(\"error\", action.payload.error).set(\"beat\", Map({}));\n}), _defineProperty(_handleActions, GET_BEAT_FAILURE, function (state, action) {\n  return state.set(\"loading\", false).set(\"error\", action.payload.error).set(\"beat\", Map({}));\n}), _defineProperty(_handleActions, GET_BEATS_FAILURE, function (state, action) {\n  return state.set(\"loading\", false).set(\"error\", action.payload.error).set(\"beats\", List());\n}), _defineProperty(_handleActions, POST_BEATS_BEGIN, function (state, action) {\n  return state.setIn([\"post\", \"loading\"], true);\n}), _defineProperty(_handleActions, POST_BEATS_SUCCESS, function (state, action) {\n  var beat = action.payload.data;\n  return state.setIn([\"post\", \"loading\"], false).setIn([\"beat\", \"id\"], beat.id).setIn([\"post\", \"success\"], true);\n}), _defineProperty(_handleActions, POST_BEATS_FAILURE, function (state, action) {\n  return state.setIn([\"post\", \"loading\"], false).setIn([\"post\", \"error\"], action.payload.error);\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/ruby/Desktop/수업/2020-1/벤창웹2/frontend/src/store/modules/beats.js"],"names":["createAction","handleActions","Map","List","fromJS","INITIALIZE","SET_INDEX","SET_BEAT_DETAIL","GET_BEATS_BEGIN","GET_BEAT_SUCCESS","GET_BEATS_SUCCESS","GET_BEAT_FAILURE","GET_BEATS_FAILURE","POST_BEATS_BEGIN","POST_BEATS_SUCCESS","POST_BEATS_FAILURE","initialize","setIndex","setBeatDetail","getBeatsBegin","getBeatSuccess","getBeatsSuccess","getBeatFailure","getBeatsFailure","postBeatsBegin","postBeatsSuccess","postBeatsFailure","initialState","loading","beats","error","index","beat","post","success","state","action","id","payload","set","setIn","key","value","response","data","results"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { Map, List, fromJS } from \"immutable\";\n\n// action types\nconst INITIALIZE = \"beats/INITIALIZE\";\nconst SET_INDEX = \"beats/SET_INDEX\";\nconst SET_BEAT_DETAIL = \"beats/SET_BEAT_DETAIL\";\n\nconst GET_BEATS_BEGIN = \"beats/GET_BEATS_BEGIN\";\nconst GET_BEAT_SUCCESS = \"beats/GET_BEAT_SUCCESS\";\nconst GET_BEATS_SUCCESS = \"beats/GET_BEATS_SUCCESS\";\nconst GET_BEAT_FAILURE = \"beats/GET_BEATS_FAILURE\";\nconst GET_BEATS_FAILURE = \"beats/GET_BEATS_FAILURE\";\n\nconst POST_BEATS_BEGIN = \"beats/POST_BEATS_BEGIN\";\nconst POST_BEATS_SUCCESS = \"beats/POST_BEATS_SUCCESS\";\nconst POST_BEATS_FAILURE = \"beats/POST_BEATS_FAILURE\";\n\n// action creators\nexport const initialize = createAction(INITIALIZE);\nexport const setIndex = createAction(SET_INDEX);\nexport const setBeatDetail = createAction(SET_BEAT_DETAIL);\n\nexport const getBeatsBegin = createAction(GET_BEATS_BEGIN);\nexport const getBeatSuccess = createAction(GET_BEAT_SUCCESS);\nexport const getBeatsSuccess = createAction(GET_BEATS_SUCCESS);\nexport const getBeatFailure = createAction(GET_BEAT_FAILURE);\nexport const getBeatsFailure = createAction(GET_BEATS_FAILURE);\n\nexport const postBeatsBegin = createAction(POST_BEATS_BEGIN);\nexport const postBeatsSuccess = createAction(POST_BEATS_SUCCESS);\nexport const postBeatsFailure = createAction(POST_BEATS_FAILURE);\n\n// initial state\nconst initialState = Map({\n  loading: false,\n  beats: List(),\n  error: null,\n  index: null,\n  beat: Map({}),\n  post: Map({\n    loading: false,\n    error: null,\n    success: null\n  })\n});\n/**\n * Map({\n        id: null,\n        title: null,\n        created: null,\n        updated: null,\n        author: null,\n        description: null,\n        num_like: null,\n        num_comment: null,\n        hasWaterMark: null,\n        bpm: null,\n        owner: null,\n        imgUrl: null,\n        downloadUrl: null,\n        tags: List(),\n    }),\n */\n// reducer\nexport default handleActions(\n  {\n    [INITIALIZE]: (state, action) => initialState,\n    [SET_INDEX]: (state, action) => {\n      const id = action.payload;\n      return state.set(\"index\", id);\n    },\n    [SET_BEAT_DETAIL]: (state, action) => {\n      return state.setIn([\"beat\", action.payload.key], action.payload.value);\n    },\n    [SET_BEAT_DETAIL]: (state, action) => {\n      return state.setIn([\"beat\", action.payload.key], action.payload.value);\n    },\n    [GET_BEATS_BEGIN]: (state, action) => {\n      return state.set(\"loading\", true).set(\"error\", null);\n    },\n    [GET_BEAT_SUCCESS]: (state, action) => {\n      const { data: response } = action.payload;\n      return state.set(\"beat\", fromJS(response)).set(\"loading\", false);\n    },\n    [GET_BEAT_SUCCESS]: (state, action) => {\n      const { data: response } = action.payload;\n      return state.set(\"beat\", fromJS(response)).set(\"loading\", false);\n    },\n    [GET_BEATS_SUCCESS]: (state, action) => {\n      const { data: response } = action.payload;\n      return state.set(\"beats\", fromJS(response.results)).set(\"loading\", false);\n    },\n    [GET_BEAT_FAILURE]: (state, action) => {\n      return state\n        .set(\"loading\", false)\n        .set(\"error\", action.payload.error)\n        .set(\"beat\", Map({}));\n    },\n    [GET_BEAT_FAILURE]: (state, action) => {\n      return state\n        .set(\"loading\", false)\n        .set(\"error\", action.payload.error)\n        .set(\"beat\", Map({}));\n    },\n    [GET_BEATS_FAILURE]: (state, action) => {\n      return state\n        .set(\"loading\", false)\n        .set(\"error\", action.payload.error)\n        .set(\"beats\", List());\n    },\n    [POST_BEATS_BEGIN]: (state, action) => {\n      return state.setIn([\"post\", \"loading\"], true);\n    },\n    [POST_BEATS_SUCCESS]: (state, action) => {\n      const { data: beat } = action.payload;\n      return state\n        .setIn([\"post\", \"loading\"], false)\n        .setIn([\"beat\", \"id\"], beat.id)\n        .setIn([\"post\", \"success\"], true);\n    },\n    [POST_BEATS_FAILURE]: (state, action) => {\n      return state\n        .setIn([\"post\", \"loading\"], false)\n        .setIn([\"post\", \"error\"], action.payload.error);\n    }\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}