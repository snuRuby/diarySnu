{"ast":null,"code":"import _classCallCheck from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/src/containers/common/HeaderContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as accountsActions from \"store/modules/accounts\";\nimport * as baseActions from \"store/modules/base\";\nimport * as api from \"lib/api\";\nimport Header from \"components/common/Header\";\n\nvar HeaderContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HeaderContainer, _Component);\n\n  function HeaderContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClickLogin = function () {\n      var BaseActions = _this.props.BaseActions;\n      BaseActions.showModal(\"login\");\n    };\n\n    _this.onLogout = function () {\n      var AccountsActions = _this.props.AccountsActions; // TODO: server side logout (session) should be completed\n\n      AccountsActions.logout();\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          logged = _this$props.logged,\n          username = _this$props.username,\n          loading = _this$props.loading,\n          error = _this$props.error;\n      var onClickLogin = this.onClickLogin,\n          onLogout = this.onLogout;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Header, {\n        logged: logged,\n        username: username,\n        loading: loading,\n        error: error,\n        onLogout: onLogout,\n        onClickLogin: onClickLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HeaderContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    logged: state.accounts.get(\"logged\"),\n    username: state.accounts.get(\"username\")\n  };\n}, function (dispatch) {\n  return {\n    AccountsActions: bindActionCreators(accountsActions, dispatch),\n    BaseActions: bindActionCreators(baseActions, dispatch)\n  };\n})(HeaderContainer);","map":{"version":3,"sources":["/Users/ruby/Desktop/수업/2020-1/벤창웹2/snu-blog/src/containers/common/HeaderContainer.js"],"names":["React","Component","connect","bindActionCreators","accountsActions","baseActions","api","Header","HeaderContainer","onClickLogin","BaseActions","props","showModal","onLogout","AccountsActions","logout","logged","username","loading","error","state","accounts","get","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,KAAKC,eAAZ,MAAiC,wBAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEMC,e;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,YAAM;AAAA,UACXC,WADW,GACK,MAAKC,KADV,CACXD,WADW;AAEnBA,MAAAA,WAAW,CAACE,SAAZ,CAAsB,OAAtB;AACD,K;;UACDC,Q,GAAW,YAAM;AAAA,UACPC,eADO,GACa,MAAKH,KADlB,CACPG,eADO,EAEf;;AACAA,MAAAA,eAAe,CAACC,MAAhB;AACD,K;;;;;;;6BACQ;AAAA,wBACsC,KAAKJ,KAD3C;AAAA,UACCK,MADD,eACCA,MADD;AAAA,UACSC,QADT,eACSA,QADT;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BC,KAD5B,eAC4BA,KAD5B;AAAA,UAECV,YAFD,GAE4B,IAF5B,CAECA,YAFD;AAAA,UAEeI,QAFf,GAE4B,IAF5B,CAEeA,QAFf;AAIP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEG,MADV;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,QAAQ,EAAEN,QALZ;AAME,QAAA,YAAY,EAAEJ,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD;;;;EA1B2BR,S;;AA6B9B,eAAeC,OAAO,CACpB,UAAAkB,KAAK;AAAA,SAAK;AACRJ,IAAAA,MAAM,EAAEI,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,QAAnB,CADA;AAERL,IAAAA,QAAQ,EAAEG,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAnB;AAFF,GAAL;AAAA,CADe,EAKpB,UAAAC,QAAQ;AAAA,SAAK;AACXT,IAAAA,eAAe,EAAEX,kBAAkB,CAACC,eAAD,EAAkBmB,QAAlB,CADxB;AAEXb,IAAAA,WAAW,EAAEP,kBAAkB,CAACE,WAAD,EAAckB,QAAd;AAFpB,GAAL;AAAA,CALY,CAAP,CASbf,eATa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as accountsActions from \"store/modules/accounts\";\nimport * as baseActions from \"store/modules/base\";\nimport * as api from \"lib/api\";\n\nimport Header from \"components/common/Header\";\n\nclass HeaderContainer extends Component {\n  onClickLogin = () => {\n    const { BaseActions } = this.props;\n    BaseActions.showModal(\"login\");\n  };\n  onLogout = () => {\n    const { AccountsActions } = this.props;\n    // TODO: server side logout (session) should be completed\n    AccountsActions.logout();\n  };\n  render() {\n    const { logged, username, loading, error } = this.props;\n    const { onClickLogin, onLogout } = this;\n\n    return (\n      <React.Fragment>\n        <Header\n          logged={logged}\n          username={username}\n          loading={loading}\n          error={error}\n          onLogout={onLogout}\n          onClickLogin={onClickLogin}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    logged: state.accounts.get(\"logged\"),\n    username: state.accounts.get(\"username\")\n  }),\n  dispatch => ({\n    AccountsActions: bindActionCreators(accountsActions, dispatch),\n    BaseActions: bindActionCreators(baseActions, dispatch)\n  })\n)(HeaderContainer);\n"]},"metadata":{},"sourceType":"module"}