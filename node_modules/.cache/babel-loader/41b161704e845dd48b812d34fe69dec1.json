{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport firebaseConfig from '../firebaseConfig';\nexport default class Api {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.database = firebase.database();\n    this.BASE_URL = 'https://movie-97e7e.firebaseio.com/data/movies.json';\n  }\n\n  test() {\n    return database;\n  }\n\n  getMovies() {\n    return fetch(this.BASE_URL).then(res => res.json());\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`\n    }).then(res => res.json()).then(({\n      key\n    }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then(res => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`\n    }).then(res => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then(res => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then(res => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`\n    }).then(res => res.json());\n  }\n\n}","map":{"version":3,"sources":["/Users/donghoon/works/movie/src/api/api.js"],"names":["firebase","firebaseConfig","Api","constructor","initializeApp","database","BASE_URL","test","getMovies","fetch","then","res","json","makeHeaders","auth","headers","Authorization","localStorage","getItem","signup","name","method","body","key","setItem","login","joinRoom","id","getRooms","createRoom","getRoom","roomId","getChats","sendMessage","message"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport firebaseConfig from '../firebaseConfig';\n\nexport default class Api {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.database = firebase.database();\n    this.BASE_URL = 'https://movie-97e7e.firebaseio.com/data/movies.json';\n  }\n\n  test() {\n    return database;\n  }\n\n  getMovies() {\n    return fetch(this.BASE_URL).then((res) => res.json());\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`,\n    })\n      .then((res) => res.json())\n      .then(({ key }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`,\n    }).then((res) => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`,\n    }).then((res) => res.json());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}