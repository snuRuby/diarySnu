{"ast":null,"code":"import _classCallCheck from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/frontend/src/containers/list/BeatsListContainer.js\";\nimport React, { Component } from \"react\"; // import BeatsList from 'components/list/BeatsList';\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as beatsActions from \"store/modules/beats\";\nimport * as api from \"lib/api\";\n\nvar BeatsListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BeatsListContainer, _Component);\n\n  function BeatsListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BeatsListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BeatsListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getBeatsList = function () {\n      var BeatsActions = _this.props.BeatsActions;\n      BeatsActions.getBeatsBegin();\n      api.getBeatsList().then(function (res) {\n        return BeatsActions.getBeatsSuccess(res);\n      }).catch(function (error) {\n        return BeatsActions.getBeatsFailure(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BeatsListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBeatsList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          beats = _this$props.beats,\n          loading = _this$props.loading,\n          error = _this$props.error;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, error.message);\n      }\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BeatsListContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    beats: state.beats.get(\"beats\"),\n    loading: state.beats.get(\"loading\"),\n    error: state.beats.get(\"error\")\n  };\n}, function (dispatch) {\n  return {\n    BeatsActions: bindActionCreators(beatsActions, dispatch)\n  };\n})(BeatsListContainer);","map":{"version":3,"sources":["/Users/ruby/Desktop/수업/2020-1/벤창웹2/frontend/src/containers/list/BeatsListContainer.js"],"names":["React","Component","connect","bindActionCreators","beatsActions","api","BeatsListContainer","getBeatsList","BeatsActions","props","getBeatsBegin","then","res","getBeatsSuccess","catch","error","getBeatsFailure","beats","loading","message","state","get","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;;IAEMC,kB;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,YAAM;AAAA,UACXC,YADW,GACM,MAAKC,KADX,CACXD,YADW;AAEnBA,MAAAA,YAAY,CAACE,aAAb;AACAL,MAAAA,GAAG,CACAE,YADH,GAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,eAAIJ,YAAY,CAACK,eAAb,CAA6BD,GAA7B,CAAJ;AAAA,OAFX,EAGGE,KAHH,CAGS,UAAAC,KAAK;AAAA,eAAIP,YAAY,CAACQ,eAAb,CAA6BD,KAA7B,CAAJ;AAAA,OAHd;AAID,K;;;;;;;wCACmB;AAClB,WAAKR,YAAL;AACD;;;6BACQ;AAAA,wBAC2B,KAAKE,KADhC;AAAA,UACCQ,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBH,KADjB,eACiBA,KADjB;;AAGP,UAAIA,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAK,CAACI,OAAZ,CAAP;AACD;;AAED,UAAID,OAAJ,EAAa;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAxB8BjB,S;;AA2BjC,eAAeC,OAAO,CACpB,UAAAkB,KAAK;AAAA,SAAK;AACRH,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYI,GAAZ,CAAgB,OAAhB,CADC;AAERH,IAAAA,OAAO,EAAEE,KAAK,CAACH,KAAN,CAAYI,GAAZ,CAAgB,SAAhB,CAFD;AAGRN,IAAAA,KAAK,EAAEK,KAAK,CAACH,KAAN,CAAYI,GAAZ,CAAgB,OAAhB;AAHC,GAAL;AAAA,CADe,EAMpB,UAAAC,QAAQ;AAAA,SAAK;AACXd,IAAAA,YAAY,EAAEL,kBAAkB,CAACC,YAAD,EAAekB,QAAf;AADrB,GAAL;AAAA,CANY,CAAP,CASbhB,kBATa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n// import BeatsList from 'components/list/BeatsList';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as beatsActions from \"store/modules/beats\";\nimport * as api from \"lib/api\";\n\nclass BeatsListContainer extends Component {\n  getBeatsList = () => {\n    const { BeatsActions } = this.props;\n    BeatsActions.getBeatsBegin();\n    api\n      .getBeatsList()\n      .then(res => BeatsActions.getBeatsSuccess(res))\n      .catch(error => BeatsActions.getBeatsFailure(error));\n  };\n  componentDidMount() {\n    this.getBeatsList();\n  }\n  render() {\n    const { beats, loading, error } = this.props;\n\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>loading...</div>;\n    }\n\n    return <div>{/* <BeatsList beats={beats} /> */}</div>;\n  }\n}\n\nexport default connect(\n  state => ({\n    beats: state.beats.get(\"beats\"),\n    loading: state.beats.get(\"loading\"),\n    error: state.beats.get(\"error\")\n  }),\n  dispatch => ({\n    BeatsActions: bindActionCreators(beatsActions, dispatch)\n  })\n)(BeatsListContainer);\n"]},"metadata":{},"sourceType":"module"}