{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/src/containers/account/SignUpContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { isEmail } from \"validator\";\nimport * as accountsActions from \"store/modules/accounts\";\nimport * as api from \"lib/api\";\nimport SignUpForm from \"components/account/signUpForm\";\n\nvar SignUpContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpContainer, _Component);\n\n  function SignUpContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUpContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUpContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onKeyPress = function (e) {\n      if (e.key === \"Enter\") {\n        _this.onSubmit();\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var AccountsActions = _this.props.AccountsActions;\n      AccountsActions.changeRegInput({\n        type: e.target.name,\n        value: e.target.value\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, username, password, password2, email, AccountsActions, response, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, username = _this$props.username, password = _this$props.password, password2 = _this$props.password2, email = _this$props.email, AccountsActions = _this$props.AccountsActions;\n\n              if (username && password && password2 && email) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.regInputError({\n                error: \"모든 양식을 채워주십시오.\"\n              }));\n\n            case 3:\n              if (!(username.length > 150)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.regInputError({\n                error: \"유저 이름이 너무 깁니다.\"\n              }));\n\n            case 5:\n              if (!(password !== password2)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.regInputError({\n                error: \"두 패스워드가 일치하지 않습니다.\"\n              }));\n\n            case 7:\n              if (!(password.length < 8)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.regInputError({\n                error: \"패스워드는 8자리 이상이어야 합니다.\"\n              }));\n\n            case 9:\n              if (isEmail(email)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.regInputError({\n                error: \"이메일 양식이 유효하지 않습니다.\"\n              }));\n\n            case 11:\n              AccountsActions.registerBegin();\n              _context.prev = 12;\n              _context.next = 15;\n              return api.registerUser({\n                username: username,\n                password: password,\n                email: email\n              });\n\n            case 15:\n              response = _context.sent;\n              console.log(response);\n\n              if (!(response.status === 201)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\", AccountsActions.registerSuccess(response.data));\n\n            case 19:\n              return _context.abrupt(\"return\", AccountsActions.registerFailure(response.data[\"error\"]));\n\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](12);\n              console.log(_context.t0);\n              error = {\n                error: _context.t0.message\n              };\n              return _context.abrupt(\"return\", AccountsActions.registerFailure(error));\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[12, 22]]);\n    }));\n    return _this;\n  }\n\n  _createClass(SignUpContainer, [{\n    key: \"render\",\n    value: function render() {\n      var handleChange = this.handleChange,\n          onSubmit = this.onSubmit,\n          onKeyPress = this.onKeyPress;\n      var _this$props2 = this.props,\n          inputError = _this$props2.inputError,\n          error = _this$props2.error,\n          loading = _this$props2.loading,\n          redirect = _this$props2.redirect,\n          username = _this$props2.username,\n          password = _this$props2.password,\n          password2 = _this$props2.password2,\n          email = _this$props2.email;\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(SignUpForm, {\n        username: username,\n        password: password,\n        password2: password2,\n        email: email,\n        onSubmit: onSubmit,\n        onKeyPress: onKeyPress,\n        error: error,\n        inputError: inputError,\n        handleChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SignUpContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    loading: state.accounts.getIn([\"register\", \"loading\"]),\n    username: state.accounts.getIn([\"register\", \"username\"]),\n    password: state.accounts.getIn([\"register\", \"password\"]),\n    password2: state.accounts.getIn([\"register\", \"password2\"]),\n    email: state.accounts.getIn([\"register\", \"email\"]),\n    inputError: state.accounts.getIn([\"register\", \"inputError\"]),\n    error: state.accounts.getIn([\"register\", \"error\"]),\n    redirect: state.accounts.get(\"redirect\")\n  };\n}, function (dispatch) {\n  return {\n    AccountsActions: bindActionCreators(accountsActions, dispatch)\n  };\n})(SignUpContainer);","map":{"version":3,"sources":["/Users/ruby/Desktop/수업/2020-1/벤창웹2/snu-blog/src/containers/account/SignUpContainer.js"],"names":["React","Component","connect","bindActionCreators","Redirect","isEmail","accountsActions","api","SignUpForm","SignUpContainer","onKeyPress","e","key","onSubmit","handleChange","AccountsActions","props","changeRegInput","type","target","name","value","username","password","password2","email","regInputError","error","length","registerBegin","registerUser","response","console","log","status","registerSuccess","data","registerFailure","message","inputError","loading","redirect","state","accounts","getIn","get","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { isEmail } from \"validator\";\n\nimport * as accountsActions from \"store/modules/accounts\";\nimport * as api from \"lib/api\";\nimport SignUpForm from \"components/account/signUpForm\";\n\nclass SignUpContainer extends Component {\n  onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.onSubmit();\n    }\n  };\n  handleChange = e => {\n    const { AccountsActions } = this.props;\n    AccountsActions.changeRegInput({\n      type: e.target.name,\n      value: e.target.value\n    });\n  };\n  onSubmit = async () => {\n    const {\n      username,\n      password,\n      password2,\n      email,\n      AccountsActions\n    } = this.props;\n    if (!(username && password && password2 && email)) {\n      return AccountsActions.regInputError({\n        error: \"모든 양식을 채워주십시오.\"\n      });\n    }\n    if (username.length > 150) {\n      return AccountsActions.regInputError({\n        error: \"유저 이름이 너무 깁니다.\"\n      });\n    }\n    if (password !== password2) {\n      return AccountsActions.regInputError({\n        error: \"두 패스워드가 일치하지 않습니다.\"\n      });\n    }\n    if (password.length < 8) {\n      return AccountsActions.regInputError({\n        error: \"패스워드는 8자리 이상이어야 합니다.\"\n      });\n    }\n    if (!isEmail(email)) {\n      return AccountsActions.regInputError({\n        error: \"이메일 양식이 유효하지 않습니다.\"\n      });\n    }\n    AccountsActions.registerBegin();\n    try {\n      const response = await api.registerUser({ username, password, email });\n      console.log(response);\n      if (response.status === 201) {\n        return AccountsActions.registerSuccess(response.data);\n      }\n      return AccountsActions.registerFailure(response.data[\"error\"]);\n    } catch (e) {\n      console.log(e);\n      const error = { error: e.message };\n      return AccountsActions.registerFailure(error);\n    }\n  };\n\n  render() {\n    const { handleChange, onSubmit, onKeyPress } = this;\n    const {\n      inputError,\n      error,\n      loading,\n      redirect,\n      username,\n      password,\n      password2,\n      email\n    } = this.props;\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (loading) {\n      return <div>loading...</div>;\n    }\n    return (\n      <div>\n        <SignUpForm\n          username={username}\n          password={password}\n          password2={password2}\n          email={email}\n          onSubmit={onSubmit}\n          onKeyPress={onKeyPress}\n          error={error}\n          inputError={inputError}\n          handleChange={handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    loading: state.accounts.getIn([\"register\", \"loading\"]),\n    username: state.accounts.getIn([\"register\", \"username\"]),\n    password: state.accounts.getIn([\"register\", \"password\"]),\n    password2: state.accounts.getIn([\"register\", \"password2\"]),\n    email: state.accounts.getIn([\"register\", \"email\"]),\n    inputError: state.accounts.getIn([\"register\", \"inputError\"]),\n    error: state.accounts.getIn([\"register\", \"error\"]),\n    redirect: state.accounts.get(\"redirect\")\n  }),\n  dispatch => ({\n    AccountsActions: bindActionCreators(accountsActions, dispatch)\n  })\n)(SignUpContainer);\n"]},"metadata":{},"sourceType":"module"}