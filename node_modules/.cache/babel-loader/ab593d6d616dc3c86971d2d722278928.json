{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/database'; // import firebaseConfig from '../firebaseConfig';\n\nexport default class Api {\n  constructor() {\n    this.BASE_URL = 'https://movie-97e7e.firebaseio.com/data/movies.json'; // firebase.initializeApp(firebaseConfig)\n\n    this.database = firebase.database();\n    this.database.ref('/data').once('value').then(d => console.log(d.child().val())); // console.log(this.database.ref('/data').once('value'));\n  } // getMovies() {\n  //   return this.database.ref('/data/movies').once('value');\n  // }\n\n\n  getMovies() {\n    return fetch(this.BASE_URL).then(res => res.json());\n  }\n\n  getMovie() {// return this.database.ref().once('value');\n    // return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`\n    }).then(res => res.json()).then(({\n      key\n    }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then(res => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`\n    }).then(res => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then(res => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then(res => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`\n    }).then(res => res.json());\n  }\n\n}","map":{"version":3,"sources":["/Users/donghoon/works/movie/src/api/api.js"],"names":["firebase","Api","constructor","BASE_URL","database","ref","once","then","d","console","log","child","val","getMovies","fetch","res","json","getMovie","makeHeaders","auth","headers","Authorization","localStorage","getItem","signup","name","method","body","key","setItem","login","joinRoom","id","getRooms","createRoom","getRoom","roomId","getChats","sendMessage","message"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/database';\n// import firebaseConfig from '../firebaseConfig';\n\nexport default class Api {\n  constructor() {\n    this.BASE_URL = 'https://movie-97e7e.firebaseio.com/data/movies.json';\n    // firebase.initializeApp(firebaseConfig)\n    this.database = firebase.database();\n    this.database.ref('/data').once('value').then((d) => console.log(d.child().val()));\n    // console.log(this.database.ref('/data').once('value'));\n  }\n\n  // getMovies() {\n  //   return this.database.ref('/data/movies').once('value');\n  // }\n  getMovies() {\n    return fetch(this.BASE_URL).then((res) => res.json());\n  }\n\n  getMovie() {\n    // return this.database.ref().once('value');\n    // return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`,\n    })\n      .then((res) => res.json())\n      .then(({ key }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`,\n    }).then((res) => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`,\n    }).then((res) => res.json());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}