{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport firebaseConfig from '../firebaseConfig';\nexport default class Api {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.database = firebase.database();\n    console.log(this.database.ref('/data').once('value'));\n  }\n\n  getMovies() {\n    return this.database.ref('/data/movies').once('value');\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`\n    }).then(res => res.json()).then(({\n      key\n    }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true)\n    }).then(res => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then(res => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`\n    }).then(res => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then(res => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then(res => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`\n    }).then(res => res.json());\n  }\n\n}","map":{"version":3,"sources":["/Users/donghoon/works/movie/src/api/api.js"],"names":["firebase","firebaseConfig","Api","constructor","initializeApp","database","console","log","ref","once","getMovies","makeHeaders","auth","headers","Authorization","localStorage","getItem","signup","name","fetch","BASE_URL","method","body","then","res","json","key","setItem","login","joinRoom","id","getRooms","createRoom","getRoom","roomId","getChats","sendMessage","message"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport firebaseConfig from '../firebaseConfig';\n\nexport default class Api {\n  constructor() {\n    firebase.initializeApp(firebaseConfig)\n    this.database = firebase.database();\n    console.log(this.database.ref('/data').once('value'));\n  }\n\n  getMovies() {\n    return this.database.ref('/data/movies').once('value');\n  }\n\n  makeHeaders(auth = false) {\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n    return headers;\n  }\n\n  signup(name) {\n    return fetch(`${this.BASE_URL}/signup`, {\n      method: 'POST',\n      headers: this.makeHeaders(),\n      body: `name=${name}`,\n    })\n      .then((res) => res.json())\n      .then(({ key }) => localStorage.setItem('key', key));\n  }\n\n  login() {\n    return fetch(`${this.BASE_URL}/login`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  joinRoom(id) {\n    return fetch(`${this.BASE_URL}/rooms/${id}`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n    }).then((res) => res.json());\n  }\n\n  getRooms() {\n    return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n  }\n\n  createRoom(name) {\n    return fetch(`${this.BASE_URL}/rooms`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `name=${name}`,\n    }).then((res) => res.json());\n  }\n\n  getRoom(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  }\n\n  getChats(roomId) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n  }\n\n  sendMessage(roomId, message) {\n    return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n      method: 'POST',\n      headers: this.makeHeaders(true),\n      body: `message=${message}`,\n    }).then((res) => res.json());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}