{"ast":null,"code":"import _regeneratorRuntime from\"/Users/donghoon/works/movie/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/donghoon/works/movie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/donghoon/works/movie/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/donghoon/works/movie/node_modules/@babel/runtime/helpers/esm/createClass\";import*as firebase from'firebase/app';import'firebase/database';var Api=/*#__PURE__*/function(){function Api(){_classCallCheck(this,Api);this.basePath='/data/movies';this.database=firebase.database().ref(this.basePath).once('value').then(function(d){return d.val();});}_createClass(Api,[{key:\"getMovies\",value:function getMovies(){return this.database;}},{key:\"getMovie\",value:function(){var _getMovie=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var movies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.database;case 2:movies=_context.sent;return _context.abrupt(\"return\",movies.filter(function(_ref){var dataId=_ref.id;return id===dataId;}).slice(-1).pop());case 4:case\"end\":return _context.stop();}}},_callee,this);}));function getMovie(_x){return _getMovie.apply(this,arguments);}return getMovie;}()// makeHeaders(auth = false) {\n//   const headers = {\n//     'Content-Type': 'application/x-www-form-urlencoded',\n//   };\n//   if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n//   return headers;\n// }\n// signup(name) {\n//   return fetch(`${this.BASE_URL}/signup`, {\n//     method: 'POST',\n//     headers: this.makeHeaders(),\n//     body: `name=${name}`,\n//   })\n//     .then((res) => res.json())\n//     .then(({ key }) => localStorage.setItem('key', key));\n// }\n// login() {\n//   return fetch(`${this.BASE_URL}/login`, {\n//     method: 'POST',\n//     headers: this.makeHeaders(true),\n//   }).then((res) => res.json());\n// }\n// joinRoom(id) {\n//   return fetch(`${this.BASE_URL}/rooms/${id}`, {\n//     method: 'POST',\n//     headers: this.makeHeaders(true),\n//   }).then((res) => res.json());\n// }\n// getRooms() {\n//   return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n// }\n// createRoom(name) {\n//   return fetch(`${this.BASE_URL}/rooms`, {\n//     method: 'POST',\n//     headers: this.makeHeaders(true),\n//     body: `name=${name}`,\n//   }).then((res) => res.json());\n// }\n// getRoom(roomId) {\n//   return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n// }\n// getChats(roomId) {\n//   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n// }\n// sendMessage(roomId, message) {\n//   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n//     method: 'POST',\n//     headers: this.makeHeaders(true),\n//     body: `message=${message}`,\n//   }).then((res) => res.json());\n// }\n}]);return Api;}();export{Api as default};","map":{"version":3,"sources":["/Users/donghoon/works/movie/src/api/api.js"],"names":["firebase","Api","basePath","database","ref","once","then","d","val","id","movies","filter","dataId","slice","pop"],"mappings":"mbAAA,MAAO,GAAKA,CAAAA,QAAZ,KAA0B,cAA1B,CACA,MAAO,mBAAP,C,GAEqBC,CAAAA,G,yBACnB,cAAc,2BACZ,KAAKC,QAAL,CAAgB,cAAhB,CACA,KAAKC,QAAL,CAAgBH,QAAQ,CAACG,QAAT,GAAoBC,GAApB,CAAwB,KAAKF,QAA7B,EAAuCG,IAAvC,CAA4C,OAA5C,EAAqDC,IAArD,CAA0D,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,EAAP,EAA1D,CAAhB,CACD,C,6DAEW,CACV,MAAO,MAAKL,QAAZ,CACD,C,0HAEcM,E,mJACQ,MAAKN,Q,QAApBO,M,+CACCA,MAAM,CAACC,MAAP,CAAc,kBAAOC,CAAAA,MAAP,MAAGH,EAAH,OAAoBA,CAAAA,EAAE,GAAKG,MAA3B,EAAd,EAAiDC,KAAjD,CAAuD,CAAC,CAAxD,EAA2DC,GAA3D,E,iJAGT;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;0BAzEmBb,G","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nexport default class Api {\n  constructor() {\n    this.basePath = '/data/movies';\n    this.database = firebase.database().ref(this.basePath).once('value').then((d) => d.val());\n  }\n\n  getMovies() {\n    return this.database;\n  }\n\n  async getMovie(id) {\n    const movies = await this.database;\n    return movies.filter(({ id: dataId }) => id === dataId).slice(-1).pop();\n  }\n\n  // makeHeaders(auth = false) {\n  //   const headers = {\n  //     'Content-Type': 'application/x-www-form-urlencoded',\n  //   };\n  //   if (auth) headers.Authorization = `Key ${localStorage.getItem('key')}`;\n  //   return headers;\n  // }\n\n  // signup(name) {\n  //   return fetch(`${this.BASE_URL}/signup`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(),\n  //     body: `name=${name}`,\n  //   })\n  //     .then((res) => res.json())\n  //     .then(({ key }) => localStorage.setItem('key', key));\n  // }\n\n  // login() {\n  //   return fetch(`${this.BASE_URL}/login`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //   }).then((res) => res.json());\n  // }\n\n  // joinRoom(id) {\n  //   return fetch(`${this.BASE_URL}/rooms/${id}`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //   }).then((res) => res.json());\n  // }\n\n  // getRooms() {\n  //   return fetch(`${this.BASE_URL}/rooms`).then((res) => res.json());\n  // }\n\n  // createRoom(name) {\n  //   return fetch(`${this.BASE_URL}/rooms`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //     body: `name=${name}`,\n  //   }).then((res) => res.json());\n  // }\n\n  // getRoom(roomId) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}`).then((res) => res.json());\n  // }\n\n  // getChats(roomId) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`).then((res) => res.json());\n  // }\n\n  // sendMessage(roomId, message) {\n  //   return fetch(`${this.BASE_URL}/rooms/${roomId}/chats`, {\n  //     method: 'POST',\n  //     headers: this.makeHeaders(true),\n  //     body: `message=${message}`,\n  //   }).then((res) => res.json());\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}