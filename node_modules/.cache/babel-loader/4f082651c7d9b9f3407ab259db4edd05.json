{"ast":null,"code":"import _defineProperty from \"/Users/ruby/Desktop/\\uC218\\uC5C5/2020-1/\\u1107\\u1166\\u11AB\\u110E\\u1161\\u11BC\\u110B\\u1170\\u11B82/snu-blog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map } from \"immutable\"; // action types\n\nvar SHOW_MODAL = \"base/SHOW_MODAL\";\nvar HIDE_MODAL = \"base/HIDE_MODAL\";\nvar SHOW_LOADING = \"base/SHOW_LOADING\";\nvar HIDE_LOADING = \"base/HIDE_LOADING\"; // action creators\n\nexport var showModal = createAction(SHOW_MODAL);\nexport var hideModal = createAction(HIDE_MODAL);\nexport var showLoading = createAction(SHOW_LOADING);\nexport var hideLoading = createAction(HIDE_LOADING); // initial state\n\nvar initialState = Map({\n  // visible state of modal\n  modal: Map({\n    remove: false,\n    login: false,\n    beat: false\n  }),\n  loading: false\n}); // reducer\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, SHOW_MODAL, function (state, action) {\n  var modalName = action.payload;\n  return state.setIn([\"modal\", modalName], true);\n}), _defineProperty(_handleActions, HIDE_MODAL, function (state, action) {\n  var modalName = action.payload;\n  return state.setIn([\"modal\", modalName], false);\n}), _defineProperty(_handleActions, SHOW_LOADING, function (state, action) {\n  return state.set(\"loading\", true);\n}), _defineProperty(_handleActions, HIDE_LOADING, function (state, action) {\n  return state.set(\"loading\", false);\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/ruby/Desktop/수업/2020-1/벤창웹2/snu-blog/src/store/modules/base.js"],"names":["createAction","handleActions","Map","SHOW_MODAL","HIDE_MODAL","SHOW_LOADING","HIDE_LOADING","showModal","hideModal","showLoading","hideLoading","initialState","modal","remove","login","beat","loading","state","action","modalName","payload","setIn","set"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,QAAoB,WAApB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,iBAAnB;AACA,IAAMC,UAAU,GAAG,iBAAnB;AACA,IAAMC,YAAY,GAAG,mBAArB;AACA,IAAMC,YAAY,GAAG,mBAArB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAGP,YAAY,CAACG,UAAD,CAA9B;AACP,OAAO,IAAMK,SAAS,GAAGR,YAAY,CAACI,UAAD,CAA9B;AACP,OAAO,IAAMK,WAAW,GAAGT,YAAY,CAACK,YAAD,CAAhC;AACP,OAAO,IAAMK,WAAW,GAAGV,YAAY,CAACM,YAAD,CAAhC,C,CAEP;;AACA,IAAMK,YAAY,GAAGT,GAAG,CAAC;AACvB;AACAU,EAAAA,KAAK,EAAEV,GAAG,CAAC;AACTW,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,KAFE;AAGTC,IAAAA,IAAI,EAAE;AAHG,GAAD,CAFa;AAOvBC,EAAAA,OAAO,EAAE;AAPc,CAAD,CAAxB,C,CAUA;;AACA,eAAef,aAAa,uDAEvBE,UAFuB,EAEV,UAACc,KAAD,EAAQC,MAAR,EAAmB;AAAA,MACdC,SADc,GACAD,MADA,CACvBE,OADuB;AAE/B,SAAOH,KAAK,CAACI,KAAN,CAAY,CAAC,OAAD,EAAUF,SAAV,CAAZ,EAAkC,IAAlC,CAAP;AACD,CALuB,mCAMvBf,UANuB,EAMV,UAACa,KAAD,EAAQC,MAAR,EAAmB;AAAA,MACdC,SADc,GACAD,MADA,CACvBE,OADuB;AAE/B,SAAOH,KAAK,CAACI,KAAN,CAAY,CAAC,OAAD,EAAUF,SAAV,CAAZ,EAAkC,KAAlC,CAAP;AACD,CATuB,mCAUvBd,YAVuB,EAUR,UAACY,KAAD,EAAQC,MAAR,EAAmB;AACjC,SAAOD,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;AACD,CAZuB,mCAavBhB,YAbuB,EAaR,UAACW,KAAD,EAAQC,MAAR,EAAmB;AACjC,SAAOD,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;AACD,CAfuB,oBAiB1BX,YAjB0B,CAA5B","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nimport { Map } from \"immutable\";\n\n// action types\nconst SHOW_MODAL = \"base/SHOW_MODAL\";\nconst HIDE_MODAL = \"base/HIDE_MODAL\";\nconst SHOW_LOADING = \"base/SHOW_LOADING\";\nconst HIDE_LOADING = \"base/HIDE_LOADING\";\n\n// action creators\nexport const showModal = createAction(SHOW_MODAL);\nexport const hideModal = createAction(HIDE_MODAL);\nexport const showLoading = createAction(SHOW_LOADING);\nexport const hideLoading = createAction(HIDE_LOADING);\n\n// initial state\nconst initialState = Map({\n  // visible state of modal\n  modal: Map({\n    remove: false,\n    login: false,\n    beat: false\n  }),\n  loading: false\n});\n\n// reducer\nexport default handleActions(\n  {\n    [SHOW_MODAL]: (state, action) => {\n      const { payload: modalName } = action;\n      return state.setIn([\"modal\", modalName], true);\n    },\n    [HIDE_MODAL]: (state, action) => {\n      const { payload: modalName } = action;\n      return state.setIn([\"modal\", modalName], false);\n    },\n    [SHOW_LOADING]: (state, action) => {\n      return state.set(\"loading\", true);\n    },\n    [HIDE_LOADING]: (state, action) => {\n      return state.set(\"loading\", false);\n    }\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}